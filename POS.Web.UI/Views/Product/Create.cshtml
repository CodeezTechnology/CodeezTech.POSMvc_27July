@model CodeezTech.POS.Web.DAL.EntityDataModel.POS_PRODUCT

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="page-wrapper">
    <div class="container-fluid">
        <div class="row page-titles">
            <div class="col-md-6" style="display:inherit;">
                <a href="/Product/Index"><i class="fa fa-arrow-circle-o-left"></i></a><h3 class="text-dark"> &nbsp; Product </h3>
            </div>
            <div class="col-md-6 align-self-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="~/Home/IndexUser">Home</a></li>
                    <li class="breadcrumb-item active">Product </li>
                </ol>
            </div>
        </div>
        <!-- Start Page Content -->
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="form-validation">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <h4 style="display: inline-block; font-weight: bold;">Create</h4>
                                            <button type="button" id="btnSave" class="btn btn-success pull-right"><i class="fa fa-check"></i> Save</button>
                                        </div>
                                    </div>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                    <div class="form-group row">
                                        <div class="col-md-12">
                                            <label class="col-md-3 col-form-label text-dark"  >Product Code</label>
                                            @Html.TextBoxFor(x => x.PRODUCT_CODE, new { @style = "font-weight:Bold;", @class = "form-control ", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.PRODUCT_CODE, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-12">
                                            <label class="col-md-3 col-form-label text-dark" >Product Name</label>
                                            @Html.TextBoxFor(model => model.PRODUCT_DESC, new { @class = "form-control ", @required = "True", @autofocus = "True", @maxlength = "30" })
                                            @Html.ValidationMessageFor(model => model.PRODUCT_DESC, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <label class="col-md-6 col-form-label text-dark" >Profit Margin Rate</label>
                                            @Html.TextBoxFor(model => model.PROFIT_MARGIN_RATE, new { @class = "form-control ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.PROFIT_MARGIN_RATE, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            <label class="col-md-6 col-form-label text-dark" >Payble Price</label>
                                            @Html.TextBoxFor(model => model.PAYBLE_PRICE, new { @class = "form-control ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.PAYBLE_PRICE , "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Product Category</label>
                                            @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)TempData["ProductCategoryList"], "Please Select", new { @class = "form-control  ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.CategoryId , "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Product Type</label>
                                            @Html.DropDownListFor(model => model.TypeId, (IEnumerable<SelectListItem>)TempData["ProductTypeList"], "Please Select", new { @class = "form-control ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Unit Type</label>
                                            @Html.DropDownListFor(model => model.UnitId, (IEnumerable<SelectListItem>)TempData["UnitList"], "Please Select", new { @class = "form-control  ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.UNIT_ID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Is Tax Applied?</label>
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.IS_TAX_APPLIED_FLAG, new { @class = "custom-control-input", @id = "IS_TAX_APPLIED_FLAG" })
                                                @Html.ValidationMessageFor(model => model.IS_TAX_APPLIED_FLAG)
                                                <label class="custom-control-label" for="IS_TAX_APPLIED_FLAG"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Tax(Rs)</label>
                                            @Html.TextBoxFor(model => model.TAX_RS, new { @class = "form-control ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.TAX_RS)
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Tax(%)</label>
                                            @Html.TextBoxFor(model => model.TAX_PER, new { @class = "form-control ", @required = "True" })
                                            @Html.ValidationMessageFor(model => model.TAX_PER)
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Expiry From</label>
                                       
                                            @Html.TextBoxFor(model => model.EXPIRY_FROM, new { @class = "form-control  ", @required = "True", @type = "date" })
                                            @Html.ValidationMessageFor(model => model.EXPIRY_FROM)
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Expiry To</label>
                                            @Html.TextBoxFor(model => model.EXPIRY_TO, new { @class = " form-control ", @required = "True", @type = "date" })
                                            @Html.ValidationMessageFor(model => model.EXPIRY_TO)
                                        </div>
                                        <div class="col-md-4">
                                            <label class="col-md-6 col-form-label text-dark" >Is Active</label>
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.ISACTIVE_FLAG, new { @class = "custom-control-input", @id = "defaultUnchecked" })
                                                @Html.ValidationMessageFor(model => model.ISACTIVE_FLAG)
                                                <label class="custom-control-label" for="defaultUnchecked"></label>
                                            </div>
                                          
                                        </div>
                                      
                                    </div>
                                    
                                   

                                    
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
       // $("#EXPIRY_FROM").datetimepicker();
       
        $("#btnSave").click(function () {
            debugger;
            var Model = {};
            Model.PRODUCT_DESC = $("#PRODUCT_DESC").val();
            Model.PROFIT_MARGIN_RATE = $("#PROFIT_MARGIN_RATE").val();
            Model.PAYBLE_PRICE = $("#PAYBLE_PRICE").val();
            Model.IS_TAX_APPLIED_FLAG = $("#IS_TAX_APPLIED_FLAG").val();
            Model.TAX_PER = $("#TAX_PER").val();
            Model.TAX_RS = $("#TAX_RS").val();
            Model.TYPE_ID = $("#TypeId").val();
            Model.CATEGORY_ID = $("#CategoryId").val();
            Model.UNIT_ID = $("#UnitId").val();
            Model.EXPIRY_FROM = $("#EXPIRY_FROM").val();
            Model.EXPIRY_TO = $("#EXPIRY_TO").val();
            Model.ISACTIVE_FLAG = $("#ISACTIVE_FLAG").val();
            Model.ISPOSTED_FLAG = 0;
            var obj = new Array(Model);
            if (Validation(obj) == true) {
                $.ajax({
                    url: '@Url.Action("Create","Product")',
                    type: "POST",
                    data:  Model,
                    dataType: "json",
                   // contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.Result > 0) {
                            window.location.href = '@Url.Action("Index","Product")';
                            SuccessAlert("Product saved successfully");
                        }
                        else {
                            ErrorAlert("Product not saved, Please contact to administrator.");
                        }
                    },
                    error: function (jqXHR, exception, error) {
                        if (jqXHR.status === 0) {
                            return ('Not connected.\nPlease verify your network connection.');
                        } else if (jqXHR.status == 404) {
                            return ('The requested page not found. [404]');
                        } else if (jqXHR.status == 500) {
                            return ('Internal Server Error [500].');
                        } else if (exception === 'parsererror') {
                            return ('Requested JSON parse failed.');
                        } else if (exception === 'timeout') {
                            return ('Time out error.');
                        } else if (exception === 'abort') {
                            return ('Ajax request aborted.');
                        } else {
                            return ('Uncaught Error.\n' + jqXHR.responseText);
                        }
                        var responseTitle = $(xhr.responseText).filter('title').get(0);
                    }
                });
            }
            else {
                WarningAlert("Please fill all mandantory fields.");
            }
        });
        
    });
    function Validation(arrayModel) {
        var bTrue = true;
        var bValidate = true;

        if (arrayModel[0]["UNIT_ID"] == "") {
            $("#UnitId").css("border-color", "red");
            $("#UnitId").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#UnitId").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        if (arrayModel[0]["CATEGORY_ID"] == "") {
            $("#CategoryId").css("border-color", "red");
            $("#CategoryId").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#CategoryId").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        if (arrayModel[0]["TYPE_ID"] == "") {
            $("#TypeId").css("border-color", "red");
            $("#TypeId").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#TypeId").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        if (arrayModel[0]["PAYBLE_PRICE"] == "0") {
            $("#PAYBLE_PRICE").css("border-color", "red");
            $("#PAYBLE_PRICE").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#PAYBLE_PRICE").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        if (arrayModel[0]["PROFIT_MARGIN_RATE"] == "0") {
            $("#PROFIT_MARGIN_RATE").css("border-color", "red");
            $("#PROFIT_MARGIN_RATE").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#PROFIT_MARGIN_RATE").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        if (arrayModel[0]["PRODUCT_DESC"] == "") {
            $("#PRODUCT_DESC").css("border-color", "red");
            $("#PRODUCT_DESC").focus();
            bTrue = false;
            bValidate = bTrue;
        }
        else {
            $("#PRODUCT_DESC").css('border-color', '#ced4da');
            bTrue = true;
        }
        if (bTrue == false) {
            bValidate = bTrue;
        }
        return bValidate;

    }
</script>